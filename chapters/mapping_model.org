**** Intro                                                        :ignore:

# Intro

A mapping algorithm or mapper is an algorithm able to find a mapping solution given a quantum circuit and the target device constraints.
As one could see in the [[id:322a9393-f13b-4992-9751-fea71fed93f0][State of the art]], the mapping algorithms are mostly classical.
There are not remarkable quantum solutions for this task, yet.

**** Explanation of the mapping flow                              :ignore:

# Explanation of the mapping flow

We consider that a mapper is subdivided in three tasks: scheduler, initial placement and routing, as described in the [[id:cb18cc44-b0eb-47b1-82db-85ab7c7c083c][Mapping of quantum circuits]] section.
Our procedure is modular, although the flow is restricted to the one described below.
The mapper is fully adaptable to any device constrain.
It also offers two different kinds of schedulers, as well as the option of running or not the initial placement and another options related to the chip constrains.
We believe this solution will aid researchers to investigate the best mapping, with different configurations.

#+caption: Mapping flow
#+NAME: fig:mapping_flow
#+ATTR_LATEX: :width 0.5\textwidth
[[file:figures/mapping_flow2.png]]

***** Circuit decomposition

First, the mapper decomposes the gates from the quantum circuit into the gate set that is possible to run in the quantum device.

***** Pre-scheduler

After that, we pre-schedule the circuit in order to make it easier to understand to the initial placement and router.
It will execute an ALAP scheduler, creating bundles of parallel gates and pushing them to the end of the circuit.
The resolution of using an ALAP scheduler comes because the Bas's [REFER BAS THESIS] demonstrated it makes the router to find always a better path than if not.

***** Initial Virtual-to-Physical-map
***** Initial placement
***** Router
***** Resource constrains scheduler
**** Why we choose this specific model                            :ignore:

# Explaining why you chose your specific method, model, etc

**** Benefits of our method                                       :ignore:

# Describing benefits of your method

**** Admitting limitations                                        :ignore:

# Admitting limitations

One downside factor regarding this methodology is that the mapper only takes into account one cycle every time.
It does not look ahead in order to decide the best path also for next iterations.
Or, what is the same, it does not always find the best mapping solution.
This limitation comes from the fact that, the more steps you are looking ahead while mapping, the more computationally complex will be the mapper.
We highlight that the mapping problem is an NP problem with complexity $O=...$.
Therefore, this method represents a viable solution, although a lot of future work should be done.
