
[Intro to Quantum Computation power that it is based on *superposition* and *entanglement*]
In this section ...

*** Essential elements of quantum computation

Qubits and quantum gates are the basic ingredients in quantum computation theory.
As in classical computation with boolean gates and bits, quantum gates operate on the qubits to change their state and return the desired result or calculation.

**** Qubits

Qubit stands for quantum bit.
A basic unit of information founded on quantum physics laws.
Unlike a classical bit, whose state can be either ~0~ or ~1~, but like a particle; qubits are not in a fixed state -- ground or excited -- until they are measured.
A qubit's state could be either ~0~ or ~1~ or both before measuring it.
Both ground or excited states are represented in the Dirac's bra-ket notation, viz. $| 0 \rangle$ and $| 1 \rangle$ respectively.
This notation holds the algebraic axioms cite:Nielsen_2009 required to understand the quantum theory.
Prior to measurement, a qubit is described as in a probabilistic state $| \Psi \rangle = \alpha | 0 \rangle + \beta | 1 \rangle$, where $\alpha, \beta \in \mathbb{C}$ are the so-called probability amplitudes.
$|\alpha|^2$ is the probability of measuring $| 0 \rangle$, $|\beta|^2$ is the probability of measuring $| 1 \rangle$ and both $\alpha$ and $\beta$ are allowed to be complex.
Dirac's notation grants the definition of the quantum states as vectors, as in eq. [[eq:state_vector_notation]].
Moreover, as we will see below, adopting Dirac's axioms will make the quantum theory accessible with classical algebra operations. 

#+NAME: eq:state_vector_notation
\begin{equation}
|\Psi\rangle = \begin{bmatrix}\alpha \\ \beta \end{bmatrix}
\end{equation}

*Superposition* is easily described giving values to both $\alpha$ and $\beta$ in the same vector.
But, as soon as they are energy probabilistic states, their values are constrained to $|\alpha|^2 + |\beta|^2 = 1$.
Since quantum states can be described as vectors, one can easily see that the state of a qubit is defined by a 2-dimensional, complex and unitarian vector space.
A *Hilbert space* $\mathscr{H}$.
E.g. in eq. [[eq:example_q_vectors]] the vectors of the ground, excited and the plus superposition -- a quantum state with the same probability to measure either $|0\rangle$ or $|1\rangle$ -- states are depicted, respectively.

#+NAME: eq:example_q_vectors
\begin{equation}
|0\rangle = \begin{bmatrix}1 \\ 0 \end{bmatrix} \quad \quad |1\rangle = \begin{bmatrix}0 \\ 1 \end{bmatrix} \quad \quad |+\rangle = \frac{1}{\sqrt{2}} \begin{bmatrix}1 \\ 1 \end{bmatrix}
\end{equation}

# To visualize the quantum states -> the Bloch sphere
As soon as the vectors are 2-dimensional, complex and unitary they can also be described in phase notation (eq. [[eq:phase_not]]).
Like the complex numbers, although requiring two angles in this case.
This notation lead us to a very understandable way to visualize the quantum states, the *Bloch sphere* (fig. \ref{fig:bloch_sphere}).
A sphere of radius one which z-axis extremes represent the ground and excited states.

#+NAME: eq:phase_not
\begin{equation}
|\psi \rangle =\cos \left(\theta /2\right)|0\rangle \,+\,e^{i\phi }\sin \left(\theta /2\right)|1\rangle
\end{equation}

#+BEGIN_EXPORT latex
\begin{figure}
\centering
\begin{tikzpicture}[line cap=round, line join=round, >=Triangle]
  \clip(-2.19,-2.49) rectangle (2.66,2.58);
  \draw [shift={(0,0)}, lightgray, fill, fill opacity=0.1] (0,0) -- (56.7:0.4) arc (56.7:90.:0.4) -- cycle;
  \draw [shift={(0,0)}, lightgray, fill, fill opacity=0.1] (0,0) -- (-135.7:0.4) arc (-135.7:-33.2:0.4) -- cycle;
  \draw(0,0) circle (2cm);
  \draw [rotate around={0.:(0.,0.)},dash pattern=on 3pt off 3pt] (0,0) ellipse (2cm and 0.9cm);
  \draw (0,0)-- (0.70,1.07);
  \draw [->] (0,0) -- (0,2);
  \draw [->] (0,0) -- (-0.81,-0.79);
  \draw [->] (0,0) -- (2,0);
  \draw [dotted] (0.7,1)-- (0.7,-0.46);
  \draw [dotted] (0,0)-- (0.7,-0.46);
  \draw (-0.08,-0.3) node[anchor=north west] {$\varphi$};
  \draw (0.01,0.9) node[anchor=north west] {$\theta$};
  \draw (-1.01,-0.72) node[anchor=north west] {$\mathbf {\hat{x}}$};
  \draw (2.07,0.3) node[anchor=north west] {$\mathbf {\hat{y}}$};
  \draw (-0.5,2.6) node[anchor=north west] {$\mathbf {\hat{z}=|0\rangle}$};
  \draw (-0.4,-2) node[anchor=north west] {$-\mathbf {\hat{z}=|1\rangle}$};
  \draw (0.4,1.65) node[anchor=north west] {$|\psi\rangle$};
  \scriptsize
  \draw [fill] (0,0) circle (1.5pt);
  \draw [fill] (0.7,1.1) circle (0.5pt);
\end{tikzpicture}
\caption{The Bloch sphere}
\label{fig:bloch_sphere}
\end{figure}
#+END_EXPORT

# Multiple qubits [Entanglement, Math operation (convolution), Hilbert space increments]
But a system with just one qubit is not useful.
The power of quantum computers explodes with the number of qubits able to work with or, what is the same, the dimensions of the Hilbert space $\mathscr{H}$.
The quantum state of $n$ qubits can be represented in bra-ket notation, with a $2^n$ size.
And, therefore, they engender a Hilbert space of $2^n$ dimensions due to superposition.
The linear operator that leads to the multiple qubit's state is the *outer product*, defined as the matrix convolution of the state vectors.
The outer product is represented as $|\phi \rangle \,\langle \psi |$.
In eq. [[eq:convolution_example]] and [[eq:convolution_example_entanglement]] an example of the outer product is offered.
The second example represents the other main phenomenon in quantum physics, the *entanglement* state of two qubits ($\phi$ and $\psi$) also known as the Bell state or the Einstein-Podolsky-Rosen (EPR) pair.

#+NAME: eq:convolution_example
\begin{equation}
|+\rangle \,\langle + | = \frac{1}{\sqrt{4}} \left( \begin{bmatrix}1 \\ 1 \end{bmatrix} \otimes \begin{bmatrix}1 \\ 1 \end{bmatrix} \right) = \frac{1}{\sqrt{4}} \begin{bmatrix}1 \\ 1 \\ 1 \\ 1\end{bmatrix} 
\end{equation}

#+NAME: eq:convolution_example_entanglement
\begin{equation}
|\Phi ^{+}\rangle =\frac  {1}{\sqrt  {2}}(|0\rangle _{\phi}\otimes |0\rangle _{\psi}+|1\rangle _{\phi}\otimes |1\rangle _{\psi}) =  \frac{(|00\rangle +|11\rangle )} {\sqrt {2}}
\end{equation}


**** Quantum Operations

Quantum operations leverage the power of quantum computers enabling calculations over the qubits.
Or what is the same, enabling transformations of some Hilbert space.
One can find a parallelism with the classical fundamental operations, the logical operations, and the quantum ones.
As their classical siblings, the quantum operations are usually represented as gates in a circuit, in a so-called quantum circuit.
Also, quantum operations can be described as square matrices of $2^{n} \times 2^{n}$ in Dirac's notation, where $n$ is the number of qubits involved in the operation.
This matrices should be unitary respecting the qubit state vector unitary property ($|\alpha|^2 + |\beta|^2 = 1$).
Therefore, quantum operations are, basically, state rotations in the Bloch sphere (fig. \ref{fig:bloch_sphere}).
For instance, a rotation of 180° in z-axis of the Bloch sphere is the same as an operation that change the qubit state from $| 0 \rangle$ to $| 1 \rangle$, or viceversa.
Qubits and quantum operations interact through the *inner product*.
In order to apply some operation over a qubit state, a matrix-vector multiplication should be done.
For instance, in eq. [[eq:inner_prod_ex]] ...

#+NAME: eq:inner_prod_ex
\begin{equation}

\end{equation}

# Universal set of gates + ¿Intro to differentiation of single- and two-qubit gates?


***** Single-qubit gates

***** Two-qubit gates

*** Quantum Circuits

Quantum circuits are quantum algorithms descriptions.
As mentioned before, they are formed by quantum gates and qubits connected in circuit fashion.
As most of the algorithm description models, quantum circuits are hardware agnostic, which is that they are not specified to any quantum device.
They are general descriptions of quantum algorithms.
Besides the circuit description model, quantum algorithms are commonly described as instruction languages like QASM (Quantum ASseMbly) cite:Nielsen_2009 or its related posterior languages.
We present an example of circuit in fig. \ref{fig:circuit_example}.
This circuit represents the quantum equivalent of a Gray encoder of six bit length.
An example of the Gray code construction is shown in [[fig:gray_code_example]]
The QASM algorithm representation can be seen in code [[code:qasm_gray_code]].
# This example will accompany us through the whole thesis as a circuit example.

#+BEGIN_EXPORT latex
\begin{figure}
    \centering

\resizebox{0.3\textwidth}{!}{
   \Qcircuit @C=1em @R=.7em {
\lstick{a} & \targ & \qw & \qw & \qw & \qw & \qw\\
\lstick{b} & \ctrl{-1} & \targ & \qw & \qw & \qw & \qw\\
\lstick{c} & \qw & \ctrl{-1} & \targ & \qw & \qw & \qw\\
\lstick{d} & \qw & \qw & \ctrl{-1} & \targ & \qw & \qw\\
\lstick{e} & \qw & \qw & \qw & \ctrl{-1} & \targ & \qw\\
\lstick{f} & \qw & \qw & \qw & \qw & \ctrl{-1} & \qw
}
}

\label{fig:circuit_example}
\caption{Gray encoder quantum circuit}
\end{figure}
#+END_EXPORT

#+caption: Gray Code
#+NAME: fig:gray_code_example
#+ATTR_LATEX: :width 0.3\textwidth
[[file:figures/gray_code.png]]

#+NAME: code:qasm_gray_code
     #+BEGIN_SRC C

     #QASM code
     
     # qubit declaration
     qubit a
     qubit b
     qubit c
     qubit d
     qubit e
     qubit f
     
     # gates declaration
     cnot b,a
     cnot c,b
     cnot d,c
     cnot e,d
     cnot f,d
     
     #+END_SRC

*** BIB                                           :noexport:
bibliography:../thesis_plan.bib
bibliographystyle:plain
